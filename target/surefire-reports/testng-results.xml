<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="4" ignored="0" total="7" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="万门api测试套件" duration-ms="5118" started-at="2020-08-17T04:19:54Z" finished-at="2020-08-17T04:19:59Z">
    <groups>
      <group name="loginTrue">
        <method signature="LoginTest.loginTrue(com.wanmen.model.users.LoginCase)[pri:0, instance:com.wanmen.cases.users.LoginTest@3d24753a]" name="loginTrue" class="com.wanmen.cases.users.LoginTest"/>
      </group> <!-- loginTrue -->
      <group name="loginFalse">
        <method signature="LoginTest.loginFalse(com.wanmen.model.users.LoginCase)[pri:0, instance:com.wanmen.cases.users.LoginTest@3d24753a]" name="loginFalse" class="com.wanmen.cases.users.LoginTest"/>
      </group> <!-- loginFalse -->
      <group name="getFav">
        <method signature="FavoriteTest.share(com.wanmen.model.BaseCase)[pri:0, instance:com.wanmen.cases.users.FavoriteTest@7e0ea639]" name="share" class="com.wanmen.cases.users.FavoriteTest"/>
      </group> <!-- getFav -->
    </groups>
    <test name="api测试用例" duration-ms="5118" started-at="2020-08-17T04:19:54Z" finished-at="2020-08-17T04:19:59Z">
      <class name="com.wanmen.cases.users.FavoriteTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.wanmen.cases.users.FavoriteTest@7e0ea639]" name="beforeClass" is-config="true" duration-ms="885" started-at="2020-08-17T12:19:54Z" description="测试准备工作,获取HttpClient对象" finished-at="2020-08-17T12:19:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="FAIL" signature="share(com.wanmen.model.BaseCase)[pri:0, instance:com.wanmen.cases.users.FavoriteTest@7e0ea639]" name="share" duration-ms="50" started-at="2020-08-17T12:19:59Z" description="获取用户收藏" data-provider="baseProvider" finished-at="2020-08-17T12:19:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BaseCase(id=0, caseName=无收藏记录, expected={"size":"0"}, api=null, scenes=null, account=favapi1@163.com, password=1111aaaa, isDel=0)]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at com.wanmen.cases.Prepare.getAuthorization(Prepare.java:42)
	at com.wanmen.cases.users.FavoriteTest.getResult(FavoriteTest.java:67)
	at com.wanmen.cases.users.FavoriteTest.share(FavoriteTest.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- share -->
        <test-method status="FAIL" signature="share(com.wanmen.model.BaseCase)[pri:0, instance:com.wanmen.cases.users.FavoriteTest@7e0ea639]" name="share" duration-ms="454" started-at="2020-08-17T12:19:59Z" description="获取用户收藏" data-provider="baseProvider" finished-at="2020-08-17T12:19:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BaseCase(id=0, caseName=有收藏记录-5条, expected={"size":"5"}, api=null, scenes=null, account=favapi2@163.com, password=1111aaaa, isDel=0)]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at com.wanmen.cases.Prepare.getAuthorization(Prepare.java:42)
	at com.wanmen.cases.users.FavoriteTest.getResult(FavoriteTest.java:67)
	at com.wanmen.cases.users.FavoriteTest.share(FavoriteTest.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- share -->
      </class> <!-- com.wanmen.cases.users.FavoriteTest -->
      <class name="com.wanmen.cases.users.LoginTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:com.wanmen.cases.users.LoginTest@3d24753a]" name="beforeTest" is-config="true" duration-ms="50" started-at="2020-08-17T12:19:55Z" description="测试准备工作,获取HttpClient对象" finished-at="2020-08-17T12:19:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="FAIL" signature="loginTrue(com.wanmen.model.users.LoginCase)[pri:0, instance:com.wanmen.cases.users.LoginTest@3d24753a]" name="loginTrue" duration-ms="1855" started-at="2020-08-17T12:19:56Z" description="输入正确的账号密码" data-provider="loginProvider" finished-at="2020-08-17T12:19:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LoginCase(account=wmapi@163.com , password=1111aaaa)]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[找不到该属性:[id]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 找不到该属性:[id]
	at com.wanmen.util.JSONPathMi.eval(JSONPathMi.java:21)
	at com.wanmen.cases.users.LoginTest.loginTrue(LoginTest.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTrue -->
        <test-method status="FAIL" signature="loginTrue(com.wanmen.model.users.LoginCase)[pri:0, instance:com.wanmen.cases.users.LoginTest@3d24753a]" name="loginTrue" duration-ms="350" started-at="2020-08-17T12:19:58Z" description="输入正确的账号密码" data-provider="loginProvider" finished-at="2020-08-17T12:19:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LoginCase(account=13910428660, password=1111aaaa)]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[找不到该属性:[id]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 找不到该属性:[id]
	at com.wanmen.util.JSONPathMi.eval(JSONPathMi.java:21)
	at com.wanmen.cases.users.LoginTest.loginTrue(LoginTest.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTrue -->
        <test-method status="PASS" signature="loginFalse(com.wanmen.model.users.LoginCase)[pri:0, instance:com.wanmen.cases.users.LoginTest@3d24753a]" name="loginFalse" duration-ms="20" started-at="2020-08-17T12:19:58Z" description="输入异常的账号密码" data-provider="loginProvider" finished-at="2020-08-17T12:19:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LoginCase(account=, password=1111aaaa)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginFalse -->
        <test-method status="PASS" signature="loginFalse(com.wanmen.model.users.LoginCase)[pri:0, instance:com.wanmen.cases.users.LoginTest@3d24753a]" name="loginFalse" duration-ms="20" started-at="2020-08-17T12:19:58Z" description="输入异常的账号密码" data-provider="loginProvider" finished-at="2020-08-17T12:19:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LoginCase(account=wmapi@163.com , password=)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginFalse -->
        <test-method status="PASS" signature="loginFalse(com.wanmen.model.users.LoginCase)[pri:0, instance:com.wanmen.cases.users.LoginTest@3d24753a]" name="loginFalse" duration-ms="22" started-at="2020-08-17T12:19:58Z" description="输入异常的账号密码" data-provider="loginProvider" finished-at="2020-08-17T12:19:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LoginCase(account=wmapi0@163.com , password=1111aaaa)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginFalse -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.wanmen.cases.users.LoginTest@3d24753a]" name="afterTest" is-config="true" duration-ms="0" started-at="2020-08-17T12:19:58Z" finished-at="2020-08-17T12:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- com.wanmen.cases.users.LoginTest -->
    </test> <!-- api测试用例 -->
  </suite> <!-- 万门api测试套件 -->
</testng-results>
