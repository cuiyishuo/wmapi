<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="7" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="万门api测试套件" duration-ms="2955" started-at="2020-08-04T02:19:35Z" finished-at="2020-08-04T02:19:38Z">
    <groups>
      <group name="loginTrue">
        <method signature="LoginTest.loginTrue(com.wanmen.model.users.LoginCase)[pri:0, instance:com.wanmen.cases.users.LoginTest@3d24753a]" name="loginTrue" class="com.wanmen.cases.users.LoginTest"/>
      </group> <!-- loginTrue -->
      <group name="loginFalse">
        <method signature="LoginTest.loginFalse(com.wanmen.model.users.LoginCase)[pri:0, instance:com.wanmen.cases.users.LoginTest@3d24753a]" name="loginFalse" class="com.wanmen.cases.users.LoginTest"/>
      </group> <!-- loginFalse -->
      <group name="getFav">
        <method signature="FavoriteTest.share(com.wanmen.model.BaseCase)[pri:0, instance:com.wanmen.cases.users.FavoriteTest@7e0ea639]" name="share" class="com.wanmen.cases.users.FavoriteTest"/>
      </group> <!-- getFav -->
    </groups>
    <test name="api测试用例" duration-ms="2955" started-at="2020-08-04T02:19:35Z" finished-at="2020-08-04T02:19:38Z">
      <class name="com.wanmen.cases.users.FavoriteTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.wanmen.cases.users.FavoriteTest@7e0ea639]" name="beforeClass" is-config="true" duration-ms="720" started-at="2020-08-04T10:19:35Z" description="测试准备工作,获取HttpClient对象" finished-at="2020-08-04T10:19:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="share(com.wanmen.model.BaseCase)[pri:0, instance:com.wanmen.cases.users.FavoriteTest@7e0ea639]" name="share" duration-ms="270" started-at="2020-08-04T10:19:37Z" description="获取用户收藏" data-provider="baseProvider" finished-at="2020-08-04T10:19:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BaseCase(id=0, caseName=无收藏记录, expected={"size":"0"}, api=null, scenes=null, account=favapi1@163.com, password=1111aaaa, isDel=0)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- share -->
        <test-method status="FAIL" signature="share(com.wanmen.model.BaseCase)[pri:0, instance:com.wanmen.cases.users.FavoriteTest@7e0ea639]" name="share" duration-ms="302" started-at="2020-08-04T10:19:37Z" description="获取用户收藏" data-provider="baseProvider" finished-at="2020-08-04T10:19:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BaseCase(id=0, caseName=有收藏记录-5条, expected={"size":"5"}, api=null, scenes=null, account=favapi2@163.com, password=1111aaaa, isDel=0)]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [5] but found [0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [5] but found [0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at com.wanmen.cases.users.FavoriteTest.share(FavoriteTest.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- share -->
      </class> <!-- com.wanmen.cases.users.FavoriteTest -->
      <class name="com.wanmen.cases.users.LoginTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:com.wanmen.cases.users.LoginTest@3d24753a]" name="beforeTest" is-config="true" duration-ms="43" started-at="2020-08-04T10:19:35Z" description="测试准备工作,获取HttpClient对象" finished-at="2020-08-04T10:19:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="loginTrue(com.wanmen.model.users.LoginCase)[pri:0, instance:com.wanmen.cases.users.LoginTest@3d24753a]" name="loginTrue" duration-ms="687" started-at="2020-08-04T10:19:36Z" description="输入正确的账号密码" data-provider="loginProvider" finished-at="2020-08-04T10:19:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LoginCase(account=wmapi@163.com , password=1111aaaa)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTrue -->
        <test-method status="PASS" signature="loginTrue(com.wanmen.model.users.LoginCase)[pri:0, instance:com.wanmen.cases.users.LoginTest@3d24753a]" name="loginTrue" duration-ms="262" started-at="2020-08-04T10:19:37Z" description="输入正确的账号密码" data-provider="loginProvider" finished-at="2020-08-04T10:19:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LoginCase(account=13910428660, password=1111aaaa)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTrue -->
        <test-method status="PASS" signature="loginFalse(com.wanmen.model.users.LoginCase)[pri:0, instance:com.wanmen.cases.users.LoginTest@3d24753a]" name="loginFalse" duration-ms="25" started-at="2020-08-04T10:19:37Z" description="输入异常的账号密码" data-provider="loginProvider" finished-at="2020-08-04T10:19:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LoginCase(account=, password=1111aaaa)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginFalse -->
        <test-method status="PASS" signature="loginFalse(com.wanmen.model.users.LoginCase)[pri:0, instance:com.wanmen.cases.users.LoginTest@3d24753a]" name="loginFalse" duration-ms="28" started-at="2020-08-04T10:19:37Z" description="输入异常的账号密码" data-provider="loginProvider" finished-at="2020-08-04T10:19:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LoginCase(account=wmapi@163.com , password=)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginFalse -->
        <test-method status="PASS" signature="loginFalse(com.wanmen.model.users.LoginCase)[pri:0, instance:com.wanmen.cases.users.LoginTest@3d24753a]" name="loginFalse" duration-ms="24" started-at="2020-08-04T10:19:37Z" description="输入异常的账号密码" data-provider="loginProvider" finished-at="2020-08-04T10:19:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LoginCase(account=wmapi0@163.com , password=1111aaaa)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginFalse -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.wanmen.cases.users.LoginTest@3d24753a]" name="afterTest" is-config="true" duration-ms="0" started-at="2020-08-04T10:19:37Z" finished-at="2020-08-04T10:19:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- com.wanmen.cases.users.LoginTest -->
    </test> <!-- api测试用例 -->
  </suite> <!-- 万门api测试套件 -->
</testng-results>
